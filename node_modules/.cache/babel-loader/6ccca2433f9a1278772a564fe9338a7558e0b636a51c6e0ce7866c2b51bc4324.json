{"ast":null,"code":"import componentsImg from \"./assets/components.png\";\nimport propsImg from \"./assets/config.png\";\nimport jsxImg from \"./assets/jsx-ui.png\";\nimport stateImg from \"./assets/state-mgmt.png\";\nexport const CORE_CONCEPTS = [{\n  image: componentsImg,\n  title: \"Components\",\n  description: \"The core UI building block - compose the user interface by combining multiple components.\"\n}, {\n  image: jsxImg,\n  title: \"JSX\",\n  description: \"Return (potentially dynamic) HTML(ish) code to define the actual markup that will be rendered.\"\n}, {\n  image: propsImg,\n  title: \"Props\",\n  description: \"Make components configurable (and therefore reusable) by passing input data to them.\"\n}, {\n  image: stateImg,\n  title: \"State\",\n  description: \"React-managed data which, when changed, causes the component to re-render & the UI to update.\"\n}];\nexport const EXAMPLES = {\n  components: {\n    title: \"Components\",\n    description: \"Components are the building blocks of React applications. A component is a self-contained module (HTML + optional CSS + JS) that renders some output.\",\n    code: \"\\nfunction Welcome() {\\n  return <h1>Hello, World!</h1>;\\n}\"\n  },\n  jsx: {\n    title: \"JSX\",\n    description: \"JSX is a syntax extension to JavaScript. It is similar to a template language, but it has full power of JavaScript (e.g., it may output dynamic content).\",\n    code: \"\\n<div>\\n  <h1>Welcome {userName}</h1>\\n  <p>Time to learn React!</p>\\n</div>\"\n  },\n  props: {\n    title: \"Props\",\n    description: \"Components accept arbitrary inputs called props. They are like function arguments.\",\n    code: \"\\nfunction Welcome(props) {\\n  return <h1>Hello, {props.name}</h1>;\\n}\"\n  },\n  state: {\n    title: \"State\",\n    description: \"State allows React components to change their output over time in response to user actions, network responses, and anything else.\",\n    code: \"\\nfunction Counter() {\\n  const [isVisible, setIsVisible] = useState(false);\\n\\n  function handleClick() {\\n    setIsVisible(true);\\n  }\\n\\n  return (\\n    <div>\\n      <button onClick={handleClick}>Show Details</button>\\n      {isVisible && <p>Amazing details!</p>}\\n    </div>\\n  );\\n}\"\n  }\n};","map":{"version":3,"names":["componentsImg","propsImg","jsxImg","stateImg","CORE_CONCEPTS","image","title","description","EXAMPLES","components","code","jsx","props","state"],"sources":["/Users/fai/Desktop/gJv_4pkE/src/data.js"],"sourcesContent":["import componentsImg from \"./assets/components.png\";\nimport propsImg from \"./assets/config.png\";\nimport jsxImg from \"./assets/jsx-ui.png\";\nimport stateImg from \"./assets/state-mgmt.png\";\n\nexport const CORE_CONCEPTS = [\n  {\n    image: componentsImg,\n    title: \"Components\",\n    description:\n      \"The core UI building block - compose the user interface by combining multiple components.\",\n  },\n  {\n    image: jsxImg,\n    title: \"JSX\",\n    description:\n      \"Return (potentially dynamic) HTML(ish) code to define the actual markup that will be rendered.\",\n  },\n  {\n    image: propsImg,\n    title: \"Props\",\n    description:\n      \"Make components configurable (and therefore reusable) by passing input data to them.\",\n  },\n  {\n    image: stateImg,\n    title: \"State\",\n    description:\n      \"React-managed data which, when changed, causes the component to re-render & the UI to update.\",\n  },\n];\n\nexport const EXAMPLES = {\n  components: {\n    title: \"Components\",\n    description:\n      \"Components are the building blocks of React applications. A component is a self-contained module (HTML + optional CSS + JS) that renders some output.\",\n    code: `\nfunction Welcome() {\n  return <h1>Hello, World!</h1>;\n}`,\n  },\n  jsx: {\n    title: \"JSX\",\n    description:\n      \"JSX is a syntax extension to JavaScript. It is similar to a template language, but it has full power of JavaScript (e.g., it may output dynamic content).\",\n    code: `\n<div>\n  <h1>Welcome {userName}</h1>\n  <p>Time to learn React!</p>\n</div>`,\n  },\n  props: {\n    title: \"Props\",\n    description:\n      \"Components accept arbitrary inputs called props. They are like function arguments.\",\n    code: `\nfunction Welcome(props) {\n  return <h1>Hello, {props.name}</h1>;\n}`,\n  },\n  state: {\n    title: \"State\",\n    description:\n      \"State allows React components to change their output over time in response to user actions, network responses, and anything else.\",\n    code: `\nfunction Counter() {\n  const [isVisible, setIsVisible] = useState(false);\n\n  function handleClick() {\n    setIsVisible(true);\n  }\n\n  return (\n    <div>\n      <button onClick={handleClick}>Show Details</button>\n      {isVisible && <p>Amazing details!</p>}\n    </div>\n  );\n}`,\n  },\n};\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,yBAAyB;AACnD,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,QAAQ,MAAM,yBAAyB;AAE9C,OAAO,MAAMC,aAAa,GAAG,CAC3B;EACEC,KAAK,EAAEL,aAAa;EACpBM,KAAK,EAAE,YAAY;EACnBC,WAAW,EACT;AACJ,CAAC,EACD;EACEF,KAAK,EAAEH,MAAM;EACbI,KAAK,EAAE,KAAK;EACZC,WAAW,EACT;AACJ,CAAC,EACD;EACEF,KAAK,EAAEJ,QAAQ;EACfK,KAAK,EAAE,OAAO;EACdC,WAAW,EACT;AACJ,CAAC,EACD;EACEF,KAAK,EAAEF,QAAQ;EACfG,KAAK,EAAE,OAAO;EACdC,WAAW,EACT;AACJ,CAAC,CACF;AAED,OAAO,MAAMC,QAAQ,GAAG;EACtBC,UAAU,EAAE;IACVH,KAAK,EAAE,YAAY;IACnBC,WAAW,EACT,uJAAuJ;IACzJG,IAAI;EAIN,CAAC;EACDC,GAAG,EAAE;IACHL,KAAK,EAAE,KAAK;IACZC,WAAW,EACT,2JAA2J;IAC7JG,IAAI;EAKN,CAAC;EACDE,KAAK,EAAE;IACLN,KAAK,EAAE,OAAO;IACdC,WAAW,EACT,oFAAoF;IACtFG,IAAI;EAIN,CAAC;EACDG,KAAK,EAAE;IACLP,KAAK,EAAE,OAAO;IACdC,WAAW,EACT,mIAAmI;IACrIG,IAAI;EAeN;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}